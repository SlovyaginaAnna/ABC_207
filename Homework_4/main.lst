     1                                  ; main.asm
     2                                  
     3                                  global FISH
     4                                  global BIRD
     5                                  global BEAST
     6                                  
     7                                  %include "macros.mac"
     1                              <1> ; macros.mac - файл с макроопределениями
     2                              <1> 
     3                              <1> extern  fopen
     4                              <1> extern  fscanf
     5                              <1> extern  fclose
     6                              <1> extern  fprintf
     7                              <1> extern  printf
     8                              <1> extern  stdout
     9                              <1> extern  time
    10                              <1> extern  srand
    11                              <1> extern  strcmp
    12                              <1> extern  atoi
    13                              <1> extern  clock
    14                              <1> extern  CLOCKS_PER_SEC
    15                              <1> 
    16                              <1> extern  InContainer
    17                              <1> extern  InRndContainer
    18                              <1> extern  OutContainer
    19                              <1> extern  PerimeterSumContainer
    20                              <1> 
    21                              <1> ;-------------------------------------------------------------
    22                              <1> ; Вывод строки символов из буфера
    23                              <1> %macro	PrintStrBuf 2
    24                              <1>         mov rdi, %2
    25                              <1>         mov rsi, %1
    26                              <1>         xor rax, rax
    27                              <1>         call fprintf
    28                              <1> %endmacro
    29                              <1> 
    30                              <1> ;-------------------------------------------------------------
    31                              <1> ; Вывод строки, передаваемой непосредственно макросу
    32                              <1> %macro  PrintStr    2
    33                              <1>     section .data
    34                              <1>         %%arg1  db  %1,0        ; first argument
    35                              <1>     section .text               ; the printf arguments
    36                              <1>         mov rdi, %2
    37                              <1>         mov rsi, %%arg1
    38                              <1>         mov rax, 0              ; no floating point
    39                              <1>         call fprintf
    40                              <1> %endmacro
    41                              <1> 
    42                              <1> ;-------------------------------------------------------------
    43                              <1> ; Вывод строки, передаваемой непосредственно макросу
    44                              <1> ; с переводом на следующую строку
    45                              <1> %macro  PrintStrLn    2
    46                              <1>     section .data
    47                              <1>         %%arg1  db  %1,10,0     ; first argument
    48                              <1>     section .text               ; the printf arguments
    49                              <1>         mov rdi, %2
    50                              <1>         mov rsi, %%arg1
    51                              <1>         mov rax, 0              ; no floating point
    52                              <1>         call fprintf
    53                              <1> %endmacro
    54                              <1> 
    55                              <1> ;-------------------------------------------------------------
    56                              <1> ; Вывод целого числа
    57                              <1> %macro  PrintInt    2
    58                              <1>     section .data
    59                              <1>         %%arg1  db  "%d",0     ; first argument
    60                              <1>     section .text               ; the printf arguments
    61                              <1>         mov rdi, %2
    62                              <1>         mov rsi, %%arg1
    63                              <1>         mov rdx, %1
    64                              <1>         mov rax, 0              ; no floating point
    65                              <1>         call fprintf
    66                              <1> %endmacro
    67                              <1> 
    68                              <1> ;-------------------------------------------------------------
    69                              <1> ; Вывод 64-разрядного беззнакового целого числа
    70                              <1> %macro  PrintLLUns    2
    71                              <1>     section .data
    72                              <1>         %%arg1  db  "%llu",0     ; first argument
    73                              <1>     section .text               ; the printf arguments
    74                              <1>         mov rdi, %2
    75                              <1>         mov rsi, %%arg1
    76                              <1>         mov rdx, %1
    77                              <1>         mov rax, 0              ; no floating point
    78                              <1>         call fprintf
    79                              <1> %endmacro
    80                              <1> 
    81                              <1> ;-------------------------------------------------------------
    82                              <1> ; Вывод действительного числа двойной точности
    83                              <1> %macro  PrintDouble    2
    84                              <1>     section .data
    85                              <1>         %%arg1  db  "%g",0     ; first argument
    86                              <1>     section .text               ; the printf arguments
    87                              <1>         mov rdi, %2
    88                              <1>         mov rsi, %%arg1
    89                              <1>         movsd xmm0, %1
    90                              <1>         mov rax, 1              ; no floating point
    91                              <1>         call fprintf
    92                              <1> %endmacro
    93                              <1> 
    94                              <1> ;-------------------------------------------------------------
    95                              <1> ; Вывод содержимого контейнера
    96                              <1> %macro  PrintContainer    3
    97                              <1>     mov     rdi, %1
    98                              <1>     mov     esi, %2
    99                              <1>     mov     rdx, %3
   100                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
   101                              <1>     call    OutContainer
   102                              <1> %endmacro
   103                              <1> 
   104                              <1> ;-------------------------------------------------------------
   105                              <1> ; Вычисление суммы периметров фигур в контейнере
   106                              <1> %macro  ContainerSum    3
   107                              <1>     mov     rdi, %1
   108                              <1>     mov     rsi, %2
   109                              <1>     call    PerimeterSumContainer
   110                              <1>     movsd   %3, xmm0
   111                              <1> %endmacro
   112                              <1> 
   113                              <1> ;-------------------------------------------------------------
   114                              <1> ; Открытие файла для чтения, записи
   115                              <1> %macro  FileOpen   3
   116                              <1>     section .data
   117                              <1>         %%rw  db  %2,0          ; признак доступа
   118                              <1>     section .text               ; the printf arguments
   119                              <1>         mov     rdi, %1         ; адрес строки открываемого файла
   120                              <1>         lea     rsi, [%%rw]       ; строка определяющая чтение-запись. Задается явно
   121                              <1>         mov     rax, 0          ; нет чисел с плавающей точкой
   122                              <1>         call    fopen
   123                              <1>         mov     [%3], rax
   124                              <1> %endmacro
   125                              <1> 
   126                              <1> ;-------------------------------------------------------------
   127                              <1> ; Закрытие открытого файла
   128                              <1> %macro  FileClose   1
   129                              <1>     mov     rdi, %1             ; передача указателя на закрываемый файл
   130                              <1>     mov     rax, 0              ; нет чисел с плавающей точкой
   131                              <1>     call    fclose
   132                              <1> %endmacro
   133                              <1> 
     8                                  section .data
     9 00000000 01000000                    FISH   dd  1
    10 00000004 02000000                    BIRD    dd  2
    11 00000008 03000000                    BEAST    dd  3
    12 0000000C 000000000000F03F            oneDouble   dq  1.0
    13 00000014 496E636F7272656374-         erMsg1  db "Incorrect number of arguments = %d: ",10,0
    13 0000001D 206E756D626572206F-
    13 00000026 6620617267756D656E-
    13 0000002F 7473203D2025643A20-
    13 00000038 0A00               
    14 0000003A 2D6E00                      rndGen  db "-n",0
    15 0000003D 2D6600                      fileGen  db "-f",0
    16 00000040 696E636F7272656374-         errMessage1 db  "incorrect command line!", 10,"  Waited:",10
    16 00000049 20636F6D6D616E6420-
    16 00000052 6C696E65210A202057-
    16 0000005B 61697465643A0A     
    17 00000062 2020202020636F6D6D-                     db  "     command -f infile outfile01 outfile02",10,"  Or:",10
    17 0000006B 616E64202D6620696E-
    17 00000074 66696C65206F757466-
    17 0000007D 696C653031206F7574-
    17 00000086 66696C6530320A2020-
    17 0000008F 4F723A0A           
    18 00000093 2020202020636F6D6D-                     db  "     command -n number outfile01 outfile02",10,0
    18 0000009C 616E64202D6E206E75-
    18 000000A5 6D626572206F757466-
    18 000000AE 696C653031206F7574-
    18 000000B7 66696C6530320A00   
    19 000000BF 696E636F7272656374-         errMessage2 db  "incorrect qualifier value!", 10,"  Waited:",10
    19 000000C8 207175616C69666965-
    19 000000D1 722076616C7565210A-
    19 000000DA 20205761697465643A-
    19 000000E3 0A                 
    20 000000E4 2020202020636F6D6D-                     db  "     command -f infile outfile01 outfile02",10,"  Or:",10
    20 000000ED 616E64202D6620696E-
    20 000000F6 66696C65206F757466-
    20 000000FF 696C653031206F7574-
    20 00000108 66696C6530320A2020-
    20 00000111 4F723A0A           
    21 00000115 2020202020636F6D6D-                     db  "     command -n number outfile01 outfile02",10,0
    21 0000011E 616E64202D6E206E75-
    21 00000127 6D626572206F757466-
    21 00000130 696C653031206F7574-
    21 00000139 66696C6530320A00   
    22 00000141 00000000                    len         dd  0           ; Количество элементов в массиве
    23                                  section .bss
    24 00000000 <res 00000004>              argc        resd    1
    25 00000004 <res 00000004>              num         resd    1
    26 00000008 <res 00000008>              sum         resq    1
    27 00000010 <res 00000008>              start       resq    1       ; начало отсчета времени
    28 00000018 <res 00000008>              delta       resq    1       ; интервал отсчета времени
    29 00000020 <res 00000010>              startTime   resq    2       ; начало отсчета времени
    30 00000030 <res 00000010>              endTime     resq    2       ; конец отсчета времени
    31 00000040 <res 00000010>              deltaTime   resq    2       ; интервал отсчета времени
    32 00000050 <res 00000008>              ifst        resq    1       ; указатель на файл, открываемый файл для чтения животных
    33 00000058 <res 00000008>              ofst1       resq    1       ; указатель на файл, открываемый файл для записи контейнера
    34 00000060 <res 00000008>              ofst2       resq    1       ; указатель на файл, открываемый файл для записи функции
    35 00000068 <res 00027100>              cont        resb    160000  ; Массив используемый для хранения данных
    36                                  
    37                                  section .text
    38                                      global main
    39                                  main:
    40 00000000 89E5                        mov ebp, esp; for correct debugging
    41 00000002 55                      push rbp
    42 00000003 4889E5                  mov rbp,rsp
    43                                  
    44 00000006 893C25[00000000]            mov dword [argc], edi ;rdi contains number of arguments
    45 0000000D 4989FC                      mov r12, rdi ;rdi contains number of arguments
    46 00000010 4989F5                      mov r13, rsi ;rsi contains the address to the array of arguments
    47                                  
    48                                  .printArguments:
    49                                      PrintStrLn "The command and arguments:", [stdout]
    49                              <1>  section .data
    49 00000145 54686520636F6D6D61- <1>  %%arg1 db %1,10,0
    49 0000014E 6E6420616E64206172- <1>
    49 00000157 67756D656E74733A0A- <1>
    49 00000160 00                  <1>
    49                              <1>  section .text
    49 00000013 488B3C25[00000000]  <1>  mov rdi, %2
    49 0000001B 48BE-               <1>  mov rsi, %%arg1
    49 0000001D [4501000000000000]  <1>
    49 00000025 B800000000          <1>  mov rax, 0
    49 0000002A E8(00000000)        <1>  call fprintf
    50 0000002F BB00000000                  mov rbx, 0
    51                                  .printLoop:
    52                                      PrintStrBuf qword [r13+rbx*8], [stdout]
    52 00000034 488B3C25[00000000]  <1>  mov rdi, %2
    52 0000003C 498B74DD00          <1>  mov rsi, %1
    52 00000041 4831C0              <1>  xor rax, rax
    52 00000044 E8(00000000)        <1>  call fprintf
    53                                      PrintStr    10, [stdout]
    53                              <1>  section .data
    53 00000161 0A00                <1>  %%arg1 db %1,0
    53                              <1>  section .text
    53 00000049 488B3C25[00000000]  <1>  mov rdi, %2
    53 00000051 48BE-               <1>  mov rsi, %%arg1
    53 00000053 [6101000000000000]  <1>
    53 0000005B B800000000          <1>  mov rax, 0
    53 00000060 E8(00000000)        <1>  call fprintf
    54 00000065 48FFC3                      inc rbx
    55 00000068 4C39E3                      cmp rbx, r12
    56 0000006B 7CC7                        jl .printLoop
    57                                  
    58 0000006D 4983FC05                    cmp r12, 5      ; проверка количества аргументов
    59 00000071 741F                        je .next1
    60                                      PrintStrBuf errMessage1, [stdout]
    60 00000073 488B3C25[00000000]  <1>  mov rdi, %2
    60 0000007B 48BE-               <1>  mov rsi, %1
    60 0000007D [4000000000000000]  <1>
    60 00000085 4831C0              <1>  xor rax, rax
    60 00000088 E8(00000000)        <1>  call fprintf
    61 0000008D E9B5020000                  jmp .return
    62                                  .next1:
    63                                      PrintStrLn "Start", [stdout]
    63                              <1>  section .data
    63 00000163 53746172740A00      <1>  %%arg1 db %1,10,0
    63                              <1>  section .text
    63 00000092 488B3C25[00000000]  <1>  mov rdi, %2
    63 0000009A 48BE-               <1>  mov rsi, %%arg1
    63 0000009C [6301000000000000]  <1>
    63 000000A4 B800000000          <1>  mov rax, 0
    63 000000A9 E8(00000000)        <1>  call fprintf
    64                                      ; Проверка второго аргумента
    65 000000AE 48BF-                       mov rdi, rndGen
    65 000000B0 [3A00000000000000] 
    66 000000B8 498B7508                    mov rsi, [r13+8]    ; второй аргумент командной строки
    67 000000BC E8(00000000)                call strcmp
    68 000000C1 4883F800                    cmp rax, 0          ; строки равны "-n"
    69 000000C5 743C                        je .next2
    70 000000C7 48BF-                       mov rdi, fileGen
    70 000000C9 [3D00000000000000] 
    71 000000D1 498B7508                    mov rsi, [r13+8]    ; второй аргумент командной строки
    72 000000D5 E8(00000000)                call strcmp
    73 000000DA 4883F800                    cmp rax, 0          ; строки равны "-f"
    74 000000DE 0F84BA000000                je .next3
    75                                      PrintStrBuf errMessage2, [stdout]
    75 000000E4 488B3C25[00000000]  <1>  mov rdi, %2
    75 000000EC 48BE-               <1>  mov rsi, %1
    75 000000EE [BF00000000000000]  <1>
    75 000000F6 4831C0              <1>  xor rax, rax
    75 000000F9 E8(00000000)        <1>  call fprintf
    76 000000FE E944020000                  jmp .return
    77                                  .next2:
    78                                      ; Генерация случайных животных
    79 00000103 498B7D10                    mov rdi, [r13+16]
    80 00000107 E8(00000000)                call atoi
    81 0000010C 890425[04000000]            mov [num], eax
    82                                      PrintInt [num], [stdout]
    82                              <1>  section .data
    82 0000016A 256400              <1>  %%arg1 db "%d",0
    82                              <1>  section .text
    82 00000113 488B3C25[00000000]  <1>  mov rdi, %2
    82 0000011B 48BE-               <1>  mov rsi, %%arg1
    82 0000011D [6A01000000000000]  <1>
    82 00000125 488B1425[04000000]  <1>  mov rdx, %1
    82 0000012D B800000000          <1>  mov rax, 0
    82 00000132 E8(00000000)        <1>  call fprintf
    83                                      PrintStrLn "", [stdout]
    83                              <1>  section .data
    83 0000016D 0A00                <1>  %%arg1 db %1,10,0
    83                              <1>  section .text
    83 00000137 488B3C25[00000000]  <1>  mov rdi, %2
    83 0000013F 48BE-               <1>  mov rsi, %%arg1
    83 00000141 [6D01000000000000]  <1>
    83 00000149 B800000000          <1>  mov rax, 0
    83 0000014E E8(00000000)        <1>  call fprintf
    84 00000153 8B0425[04000000]            mov eax, [num]
    85 0000015A 83F801                      cmp eax, 1
    86                                      jl .fall1
    86          ******************       error: symbol `main.fall1' undefined
    87 0000015D 3D10270000                  cmp eax, 10000
    88                                      jg .fall1
    88          ******************       error: symbol `main.fall1' undefined
    89                                      ; Начальная установка генератора случайных чисел
    90 00000162 4831FF                      xor     rdi, rdi
    91 00000165 4831C0                      xor     rax, rax
    92 00000168 E8(00000000)                call    time
    93 0000016D 4889C7                      mov     rdi, rax
    94 00000170 4831C0                      xor     rax, rax
    95 00000173 E8(00000000)                call    srand
    96                                      ; Заполнение контейнера случайными животными
    97 00000178 48BF-                       mov     rdi, cont   ; передача адреса контейнера
    97 0000017A [6800000000000000] 
    98 00000182 48BE-                       mov     rsi, len    ; передача адреса для длины
    98 00000184 [4101000000000000] 
    99 0000018C 8B1425[04000000]            mov     edx, [num]  ; передача количества порождаемых животных
   100 00000193 E8(00000000)                call    InRndContainer
   101 00000198 EB58                        jmp .task2
   102                                  
   103                                  .next3:
   103          ******************       error: label `main.next3' changed during code generation [-w+error=label-redef-late]
   104                                      ; Получение животных из файла
   105                                      FileOpen [r13+16], "r", ifst
   105                              <1>  section .data
   105 0000016F 7200                <1>  %%rw db %2,0
   105                              <1>  section .text
   105 0000019A 498B7D10            <1>  mov rdi, %1
   105 0000019E 488D3425[6F010000]  <1>  lea rsi, [%%rw]
   105 000001A6 B800000000          <1>  mov rax, 0
   105 000001AB E8(00000000)        <1>  call fopen
   105 000001B0 48890425[50000000]  <1>  mov [%3], rax
   106                                      ; Заполнение контейнера животными из файла
   107 000001B8 48BF-                       mov     rdi, cont           ; адрес контейнера
   107 000001BA [6800000000000000] 
   108 000001C2 48BE-                       mov     rsi, len            ; адрес для установки числа элементов
   108 000001C4 [4101000000000000] 
   109 000001CC 488B1425[50000000]          mov     rdx, [ifst]         ; указатель на файл
   110 000001D4 4831C0                      xor     rax, rax
   111 000001D7 E8(00000000)                call    InContainer         ; ввод данных в контейнер
   112                                      FileClose [ifst]
   112 000001DC 488B3C25[50000000]  <1>  mov rdi, %1
   112 000001E4 B800000000          <1>  mov rax, 0
   112 000001E9 E8(00000000)        <1>  call fclose
   113                                  
   114                                  .task2:
   114          ******************       error: label `main.task2' changed during code generation [-w+error=label-redef-late]
   115                                      ; Вывод содержимого контейнера
   116                                      PrintStrLn "Filled container:", [stdout]
   116                              <1>  section .data
   116 00000171 46696C6C656420636F- <1>  %%arg1 db %1,10,0
   116 0000017A 6E7461696E65723A0A- <1>
   116 00000183 00                  <1>
   116                              <1>  section .text
   116 000001EE 488B3C25[00000000]  <1>  mov rdi, %2
   116 000001F6 48BE-               <1>  mov rsi, %%arg1
   116 000001F8 [7101000000000000]  <1>
   116 00000200 B800000000          <1>  mov rax, 0
   116 00000205 E8(00000000)        <1>  call fprintf
   117                                      PrintContainer cont, [len], [stdout]
   117 0000020A 48BF-               <1>  mov rdi, %1
   117 0000020C [6800000000000000]  <1>
   117 00000214 8B3425[41010000]    <1>  mov esi, %2
   117 0000021B 488B1425[00000000]  <1>  mov rdx, %3
   117 00000223 B800000000          <1>  mov rax, 0
   117 00000228 E8(00000000)        <1>  call OutContainer
   118                                  
   119                                      FileOpen [r13+24], "w", ofst1
   119                              <1>  section .data
   119 00000184 7700                <1>  %%rw db %2,0
   119                              <1>  section .text
   119 0000022D 498B7D18            <1>  mov rdi, %1
   119 00000231 488D3425[84010000]  <1>  lea rsi, [%%rw]
   119 00000239 B800000000          <1>  mov rax, 0
   119 0000023E E8(00000000)        <1>  call fopen
   119 00000243 48890425[58000000]  <1>  mov [%3], rax
   120                                      PrintStrLn "Filled container:", [ofst1]
   120                              <1>  section .data
   120 00000186 46696C6C656420636F- <1>  %%arg1 db %1,10,0
   120 0000018F 6E7461696E65723A0A- <1>
   120 00000198 00                  <1>
   120                              <1>  section .text
   120 0000024B 488B3C25[58000000]  <1>  mov rdi, %2
   120 00000253 48BE-               <1>  mov rsi, %%arg1
   120 00000255 [8601000000000000]  <1>
   120 0000025D B800000000          <1>  mov rax, 0
   120 00000262 E8(00000000)        <1>  call fprintf
   121                                      PrintContainer cont, [len], [ofst1]
   121 00000267 48BF-               <1>  mov rdi, %1
   121 00000269 [6800000000000000]  <1>
   121 00000271 8B3425[41010000]    <1>  mov esi, %2
   121 00000278 488B1425[58000000]  <1>  mov rdx, %3
   121 00000280 B800000000          <1>  mov rax, 0
   121 00000285 E8(00000000)        <1>  call OutContainer
   122                                      FileClose [ofst1]
   122 0000028A 488B3C25[58000000]  <1>  mov rdi, %1
   122 00000292 B800000000          <1>  mov rax, 0
   122 00000297 E8(00000000)        <1>  call fclose
   123                                  
   124                                      ; Вычисление времени старта
   125 0000029C B8E4000000                  mov rax, 228   ; 228 is system call for sys_clock_gettime
   126 000002A1 31FF                        xor edi, edi   ; 0 for system clock (preferred over "mov rdi, 0")
   127 000002A3 488D3425[20000000]          lea rsi, [startTime]
   128 000002AB 0F05                        syscall        ; [time] contains number of seconds
   129                                                     ; [time + 8] contains number of nanoseconds
   130                                  
   131                                      ContainerSum cont, [len], [sum]
   131 000002AD 48BF-               <1>  mov rdi, %1
   131 000002AF [6800000000000000]  <1>
   131 000002B7 488B3425[41010000]  <1>  mov rsi, %2
   131 000002BF E8(00000000)        <1>  call PerimeterSumContainer
   131 000002C4 F20F110425-         <1>  movsd %3, xmm0
   131 000002C9 [08000000]          <1>
   132                                  
   133                                      ; Вычисление времени завершения
   134 000002CD B8E4000000                  mov rax, 228   ; 228 is system call for sys_clock_gettime
   135 000002D2 31FF                        xor edi, edi   ; 0 for system clock (preferred over "mov rdi, 0")
   136 000002D4 488D3425[30000000]          lea rsi, [endTime]
   137 000002DC 0F05                        syscall        ; [time] contains number of seconds
   138                                                     ; [time + 8] contains number of nanoseconds
   139                                  
   140                                      ; Получение времени работы
   141 000002DE 488B0425[30000000]          mov rax, [endTime]
   142 000002E6 482B0425[20000000]          sub rax, [startTime]
   143 000002EE 488B1C25[38000000]          mov rbx, [endTime+8]
   144 000002F6 488B0C25[28000000]          mov rcx, [startTime+8]
   145 000002FE 4839CB                      cmp rbx, rcx
   146 00000301 7D0E                        jge .subNanoOnly
   147                                      ; иначе занимаем секунду
   148 00000303 48FFC8                      dec rax
   149 00000306 4881C300CA9A3B              add rbx, 1000000000
   150                                  .subNanoOnly:
   150          ******************       error: label `main.subNanoOnly' changed during code generation [-w+error=label-redef-late]
   151 0000030D 482B1C25[28000000]          sub rbx, [startTime+8]
   152 00000315 48890425[40000000]          mov [deltaTime], rax
   153 0000031D 48891C25[48000000]          mov [deltaTime+8], rbx
   154                                  
   155                                      ; Вывод периметра нескольких фигур
   156                                     ;PrintStr "Perimeter sum = ", [stdout]
   157                                     ;PrintDouble [sum], [stdout]
   158                                     ;PrintStr ". Calculaton time = ", [stdout]
   159                                     ;PrintLLUns [deltaTime], [stdout]
   160                                     ;PrintStr " sec, ", [stdout]
   161                                     ;PrintLLUns [deltaTime+8], [stdout]
   162                                     ;PrintStr " nsec", [stdout]
   163                                     ;PrintStr 10, [stdout]
   164                                  
   165                                     ;FileOpen [r13+32], "w", ofst2
   166                                     ;PrintStr  "Perimeter sum = ", [ofst2]
   167                                     ;PrintDouble [sum], [ofst2]
   168                                     ;PrintStr ". Calculaton time = ", [ofst2]
   169                                     ;PrintLLUns [deltaTime], [ofst2]
   170                                     ;PrintStr " sec, ", [ofst2]
   171                                     ;PrintLLUns [deltaTime+8], [ofst2]
   172                                     ;PrintStr " nsec", [ofst2]
   173                                     ;PrintStr 10, [ofst2]
   174                                     ;FileClose [ofst2]
   175                                  
   176                                      PrintStrLn "Stop", [stdout]
   176                              <1>  section .data
   176 00000199 53746F700A00        <1>  %%arg1 db %1,10,0
   176                              <1>  section .text
   176 00000325 488B3C25[00000000]  <1>  mov rdi, %2
   176 0000032D 48BE-               <1>  mov rsi, %%arg1
   176 0000032F [9901000000000000]  <1>
   176 00000337 B800000000          <1>  mov rax, 0
   176 0000033C E8(00000000)        <1>  call fprintf
   177 00000341 EB04                        jmp .return
   178                                  ;.fall1:
   179                                   ;   PrintStr "incorrect numer of figures = ", [stdout]
   180                                    ;  PrintInt [num], [stdout]
   181                                    ;PrintStrLn ". Set 0 < number <= 10000", [stdout]
   182                                  .return:
   182          ******************       error: label `main.return' changed during code generation [-w+error=label-redef-late]
   183 00000343 C9                      leave
   184 00000344 C3                      ret
